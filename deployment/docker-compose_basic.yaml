version: "2.2"
services:
  # === Section 1 - tools ===
  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:1.24
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
    command: --memory.max-traces=10000

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.30.0
    command: [ "--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}", "--log-level=WARN" ]
    # command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317"        # OTLP gRPC receiver
      - "55670:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one

  # Agent
  otel-agent:
    image: otel/opentelemetry-collector-contrib:0.30.0
    command: [ "--config=/etc/otel-agent-config.yaml", "${OTELCOL_ARGS}" ]
    volumes:
      - ./otel-agent-config.yaml:/etc/otel-agent-config.yaml
    ports:
      - "8887:8888"   # Prometheus metrics exposed by the agent
      - "14250"       # Jaeger grpc receiver
      - "14268"       # Jaeger http thrift receiver
      - "55678"       # OpenCensus receiver
      - "4317:4317"        # OTLP gRPC receiver
      - "9411:9411" # Zipkin HTTP receiver ?
      - "1777:1777"   # pprof extension
      - "55679:55679" # zpages extension
      - "13133"       # health_check
    depends_on:
      - otel-collector

  prometheus:
    #    container_name: prometheus
    image: prom/prometheus:v2.28.1
    volumes:
      - ./prometheus_basic.yaml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command: [ "--config.file=/etc/prometheus/prometheus.yml","--storage.tsdb.path=/prometheus", "--web.console.libraries=/usr/share/prometheus/console_libraries", "--web.console.templates=/usr/share/prometheus/consoles", "--enable-feature=promql-at-modifier" ]

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      GF_RENDERING_SERVER_URL: http://grafana-renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug

  grafana-renderer:
    image: grafana/grafana-image-renderer:latest
    expose:
      - 8081

  # Load testing
  locust-master:
    image: locustio/locust:1.6.0
    ports:
      - "8089:8089"
    volumes:
      - ../load-testing:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H "http://app1:8080"

  locust-worker:
    image: locustio/locust:1.6.0
    volumes:
      - ../load-testing:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host locust-master
    scale: 2



  # === Section 2 - applications ===
  app1:
    build: ../
    environment:
      APP_NAME: app1
      OTEL_AGENT: otel-agent:4317
      SERVICES_TO_CALL: app2:8080,app3:8080
    depends_on:
      - app2
      - app3
    ports:
      - 8081:8080

  app2:
    build: ../
    environment:
      APP_NAME: app2
      OTEL_AGENT: otel-agent:4317
      SERVICES_TO_CALL:

  app3:
    build: ../
    environment:
      APP_NAME: app3
      OTEL_AGENT: otel-agent:4317
      SERVICES_TO_CALL:

volumes:
  grafana-data:
  prometheus-data:
